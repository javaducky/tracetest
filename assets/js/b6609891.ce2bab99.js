"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[3893],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return a?n.createElement(h,l(l({ref:t},p),{},{components:a})):n.createElement(h,l({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9472:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={},l="Detailed Instructions on Installing Tracetest Using the CLI",i={unversionedId:"getting-started/detailed-installation",id:"getting-started/detailed-installation",title:"Detailed Instructions on Installing Tracetest Using the CLI",description:"Tracetest has a command line interface (CLI) which includes an install wizard that helps to install the Tracetest server into Docker or Kubernetes. The CLI can also be used to run tests, download or upload tests, and manage much of the capability of Tracetest.",source:"@site/docs/getting-started/detailed-installation.md",sourceDirName:"getting-started",slug:"/getting-started/detailed-installation",permalink:"/getting-started/detailed-installation",draft:!1,editUrl:"https://github.com/kubeshop/tracetest/blob/main/docs/docs/getting-started/detailed-installation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Quick Start",permalink:"/getting-started/installation"},next:{title:"Configuration Overview",permalink:"/configuration/overview"}},s={},c=[{value:"Installing the Tracetest Server via the CLI",id:"installing-the-tracetest-server-via-the-cli",level:2},{value:"Linux/MacOS",id:"linuxmacos",level:3},{value:"Homebrew",id:"homebrew",level:4},{value:"APT",id:"apt",level:4},{value:"YUM",id:"yum",level:4},{value:"Windows",id:"windows",level:3},{value:"Install a Tracetest Server for Development with the CLI",id:"install-a-tracetest-server-for-development-with-the-cli",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"1. Run the <code>server install</code> Command",id:"1-run-the-server-install-command",level:3},{value:"2. Select Docker Compose",id:"2-select-docker-compose",level:3},{value:"3. Generate a Docker Compose File",id:"3-generate-a-docker-compose-file",level:3},{value:"4. Configure Jaeger as the Trace Data Source",id:"4-configure-jaeger-as-the-trace-data-source",level:3},{value:"5. Configure OpenTelemetry Collector",id:"5-configure-opentelemetry-collector",level:3},{value:"(Optional) Enable a Demo App",id:"optional-enable-a-demo-app",level:3},{value:"6. Select Output Directory for Tracetest Server Installation",id:"6-select-output-directory-for-tracetest-server-installation",level:3},{value:"7. Start Docker Compose",id:"7-start-docker-compose",level:3},{value:"8. Open the Tracetest Web UI",id:"8-open-the-tracetest-web-ui",level:3}],p={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"detailed-instructions-on-installing-tracetest-using-the-cli"},"Detailed Instructions on Installing Tracetest Using the CLI"),(0,r.kt)("p",null,"Tracetest has a command line interface (CLI) which includes an ",(0,r.kt)("strong",{parentName:"p"},"install wizard")," that helps to install the Tracetest server into Docker or Kubernetes. The CLI can also be used to run tests, download or upload tests, and manage much of the capability of Tracetest."),(0,r.kt)("h2",{id:"installing-the-tracetest-server-via-the-cli"},"Installing the Tracetest Server via the CLI"),(0,r.kt)("p",null,"Use the CLI's install wizard to install a Tracetest server locally using Docker Compose or to a local or remote Kubernetes cluster."),(0,r.kt)("p",null,"The wizard installs all the tools required to set up the desired environment and creates all the configurations, tailored to your case."),(0,r.kt)("p",null,"Every time we release a new version of Tracetest, we generate binaries for Linux, MacOS, and Windows. Supporting both amd64, and ARM64 architectures, in ",(0,r.kt)("inlineCode",{parentName:"p"},"tar.gz"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"deb"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"rpm")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"exe")," formats."),(0,r.kt)("p",null,"You can find the latest version ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kubeshop/tracetest/releases/latest"},"here"),"."),(0,r.kt)("h3",{id:"linuxmacos"},"Linux/MacOS"),(0,r.kt)("p",null,"Tracetest CLI can be installed automatically using the following script:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"curl -L https://raw.githubusercontent.com/kubeshop/tracetest/main/install-cli.sh | bash\n")),(0,r.kt)("p",null,"It works for systems with Homebrew, ",(0,r.kt)("inlineCode",{parentName:"p"},"apt-get"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"dpkg"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"yum"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"rpm")," installed, and if no package manager is available, it will try to download the build and install it manually."),(0,r.kt)("p",null,"You can also manually install with one of the following methods."),(0,r.kt)("h4",{id:"homebrew"},"Homebrew"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"brew install kubeshop/tracetest/tracetest\n")),(0,r.kt)("h4",{id:"apt"},"APT"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'# requirements for our deb repo to work\nsudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates\n\n# add repo\necho "deb [trusted=yes] https://apt.fury.io/tracetest/ /" | sudo tee /etc/apt/stores.list.d/fury.list\n\n# update and install\nsudo apt-get update\nsudo apt-get install tracetest\n')),(0,r.kt)("h4",{id:"yum"},"YUM"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# add repository\ncat <<EOF | $SUDO tee /etc/yum.repos.d/tracetest.repo\n[tracetest]\nname=Tracetest\nbaseurl=https://yum.fury.io/tracetest/\nenabled=1\ngpgcheck=0\nEOF\n\n# install\nsudo yum install tracetest --refresh\n")),(0,r.kt)("h3",{id:"windows"},"Windows"),(0,r.kt)("p",null,"Download one of the files from the latest tag, extract to your machine, and then ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/41895179"},"add the tracetest binary to your PATH variable")),(0,r.kt)("h2",{id:"install-a-tracetest-server-for-development-with-the-cli"},"Install a Tracetest Server for Development with the CLI"),(0,r.kt)("p",null,"This guide will help you get Tracetest running using the Tracetest CLI."),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Make sure you have ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"Docker")," and ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/compose/install/"},"Docker Compose"),", or ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/"},"Kubernetes")," installed.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In this quick start, OpenTelemetry Collector is used to send traces directly to Tracetest. If you have an existing trace data source, ",(0,r.kt)("a",{parentName:"p",href:"/configuration/overview"},"read here"),".")),(0,r.kt)("h3",{id:"1-run-the-server-install-command"},"1. Run the ",(0,r.kt)("inlineCode",{parentName:"h3"},"server install")," Command"),(0,r.kt)("p",null,"Once you've installed the CLI you can install a Tracetest server by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tracetest server install\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n   \u2588\u2588    \u2588\u2588   \u2588\u2588 \u2588\u2588   \u2588\u2588 \u2588\u2588      \u2588\u2588         \u2588\u2588    \u2588\u2588      \u2588\u2588         \u2588\u2588\n   \u2588\u2588    \u2588\u2588\u2588\u2588\u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588      \u2588\u2588\u2588\u2588\u2588      \u2588\u2588    \u2588\u2588\u2588\u2588\u2588   \u2588\u2588\u2588\u2588\u2588\u2588\u2588    \u2588\u2588\n   \u2588\u2588    \u2588\u2588   \u2588\u2588 \u2588\u2588   \u2588\u2588 \u2588\u2588      \u2588\u2588         \u2588\u2588    \u2588\u2588           \u2588\u2588    \u2588\u2588\n   \u2588\u2588    \u2588\u2588   \u2588\u2588 \u2588\u2588   \u2588\u2588  \u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588    \u2588\u2588    \u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588    \u2588\u2588\n\n\n\n\nHi! Welcome to the TraceTest server installer. I'll help you set up your TraceTest server by asking you a few questions\nand configuring your system with all the requirements, so you can start TraceTesting right away!\n\nTo get more info about TraceTest, you can check our docs at https://kubeshop.github.io/tracetest/\n\nIf you have any issues, please let us know by creating an issue (https://github.com/kubeshop/tracetest/issues/new/choose)\nor reach us on Discord https://discord.gg/6zupCZFQbe\n\n\nHow do you want to run TraceTest? [type to search]:\n> Using Docker Compose\n  Using Kubernetes\n")),(0,r.kt)("h3",{id:"2-select-docker-compose"},"2. Select Docker Compose"),(0,r.kt)("p",null,"This prompts you to select if you want to get either a Docker Compose or Kubernetes setup generated for you."),(0,r.kt)("p",null,"Select Docker Compose."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"...\n\n-> Let's check if your system has everything we need\n\n\u2714 docker already installed\n\u2714 docker is ready\n\u2714 docker compose already installed\n\n-> Your system is ready! Now, let's configure TraceTest\n\nProject's docker-compose file [docker-compose.yaml]:\n")),(0,r.kt)("h3",{id:"3-generate-a-docker-compose-file"},"3. Generate a Docker Compose File"),(0,r.kt)("p",null,"Add the name of the Docker Compose file, if you have one, or just hit enter to proceed and add one."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},'ERROR   File "docker-compose.yaml" does not exist. You need an existing docker-compose file.\nDo you want me to create an empty docker-compose file? [Y/n]:\n')),(0,r.kt)("p",null,"Now, hit enter again and this will generate a default ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file."),(0,r.kt)("h3",{id:"4-configure-jaeger-as-the-trace-data-source"},"4. Configure Jaeger as the Trace Data Source"),(0,r.kt)("p",null,"Next up you'll be prompted to connect a trace data store, if you have one."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"Do you have a supported tracing backend you want to use? (Jaeger, Tempo, OpenSearch, SignalFX) [y/N]:\n")),(0,r.kt)("p",null,"Write ",(0,r.kt)("inlineCode",{parentName:"p"},"Y")," and hit enter, or just proceed if you do not have a trace data store configured."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"Do you want me to set up Jaeger? [Y/n]:\n")),(0,r.kt)("p",null,"We can set up Jaeger for you if you wish. Proceed to use Jaeger as the trace data store. We'll generate a Jaeger config for you."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you have an existing trace data source, ",(0,r.kt)("a",{parentName:"p",href:"/configuration/overview"},"read this"),", or see how to use OpenTelemetry Collector ",(0,r.kt)("a",{parentName:"p",href:"../configuration/connecting-to-data-stores/opentelemetry-collector"},"here"),".")),(0,r.kt)("h3",{id:"5-configure-opentelemetry-collector"},"5. Configure OpenTelemetry Collector"),(0,r.kt)("p",null,"Next, you'll be prompted about OpenTelemetry Collector. Proceed with ",(0,r.kt)("inlineCode",{parentName:"p"},"N"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"Do you have an OpenTelemetry Collector? [y/N]:\n")),(0,r.kt)("p",null,"Now we prompt you if you want us to generate an OpenTelemetry Collector config for you. Select ",(0,r.kt)("inlineCode",{parentName:"p"},"Y"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"Do you want me to set up one? [Y/n]:\n")),(0,r.kt)("p",null,"This will generate an OpenTelemetry Collector config for you."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Want to read in more detail how to use OpenTelemetry Collector? ",(0,r.kt)("a",{parentName:"p",href:"../configuration/connecting-to-data-stores/opentelemetry-collector"},"Check this out"),".")),(0,r.kt)("h3",{id:"optional-enable-a-demo-app"},"(Optional) Enable a Demo App"),(0,r.kt)("p",null,"In the next step, the CLI will ask if you want a demo app to try out your Tracetest config."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"Do you want to enable the PokeShop demo app? (https://github.com/kubeshop/pokeshop/) [Y/n]:\n")),(0,r.kt)("p",null,"Proceed with ",(0,r.kt)("inlineCode",{parentName:"p"},"Y")," again."),(0,r.kt)("h3",{id:"6-select-output-directory-for-tracetest-server-installation"},"6. Select Output Directory for Tracetest Server Installation"),(0,r.kt)("p",null,"Lastly, select the output directory where to store all files related to Tracetest. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"Tracetest output directory [tracetest/]:\n")),(0,r.kt)("p",null,"Proceeding will set it to ",(0,r.kt)("inlineCode",{parentName:"p"},"tracetest/")," by default."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="Expected output:"',title:'"Expected','output:"':!0},"-> Thanks! We are ready to install TraceTest now\n\n SUCCESS  Install successful!\n\nTo start tracetest:\n\n    docker compose -f docker-compose.yaml -f tracetest/docker-compose.yaml up -d\n\nThen, use your browser to navigate to:\n\n  http://localhost:11633\n\nHappy TraceTesting =)\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"This means all Tracetest-related config files, files for Docker Compose, and any config file for OpenTelemetry Collector will be located in a ",(0,r.kt)("inlineCode",{parentName:"p"},"./tracetest/")," directory, with a ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," file located in the root directory where you ran the ",(0,r.kt)("inlineCode",{parentName:"p"},"tracetest server install")," command.")),(0,r.kt)("h3",{id:"7-start-docker-compose"},"7. Start Docker Compose"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose -f docker-compose.yaml -f tracetest/docker-compose.yaml up -d\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Condensed expected output from the Tracetest container:"',title:'"Condensed',expected:!0,output:!0,from:!0,the:!0,Tracetest:!0,'container:"':!0},"Starting tracetest ...\n...\n2022/11/28 18:24:09 HTTP Server started\n...\n")),(0,r.kt)("h3",{id:"8-open-the-tracetest-web-ui"},"8. Open the Tracetest Web UI"),(0,r.kt)("p",null,"Open ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:11633"},(0,r.kt)("inlineCode",{parentName:"a"},"http://localhost:11633"))," in your browser."),(0,r.kt)("p",null,"Create a ",(0,r.kt)("a",{parentName:"p",href:"/web-ui/creating-tests"},"test"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Running a test against ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost")," will resolve as ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," inside the Tracetest container. To run tests against apps running on your local machine, add them to the same network and use service name mapping instead. Example: Instead of running an app on ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:8080"),", add it to your Docker Compose file, connect it to the same network as your Tracetest service, and use ",(0,r.kt)("inlineCode",{parentName:"p"},"service-name:8080")," in the URL field when creating an app."),(0,r.kt)("p",{parentName:"admonition"},"You can reach services running on your local machine using:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Linux (docker version < 20.10.0): ",(0,r.kt)("inlineCode",{parentName:"li"},"172.17.0.1:8080")),(0,r.kt)("li",{parentName:"ul"},"MacOS (docker version >= 18.03) and Linux (docker version >= 20.10.0): ",(0,r.kt)("inlineCode",{parentName:"li"},"host.docker.internal:8080")))))}u.isMDXComponent=!0}}]);