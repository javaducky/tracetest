"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/","docId":"index"},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Quick Start","href":"/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"Detailed Installation","href":"/getting-started/detailed-installation","docId":"getting-started/detailed-installation"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Configuration","items":[{"type":"link","label":"Overview","href":"/configuration/overview","docId":"configuration/overview"},{"type":"category","label":"Connecting to Data Stores","items":[{"type":"link","label":"OpenTelemetry Collector","href":"/configuration/connecting-to-data-stores/opentelemetry-collector","docId":"configuration/connecting-to-data-stores/opentelemetry-collector"},{"type":"link","label":"Jaeger","href":"/configuration/connecting-to-data-stores/jaeger","docId":"configuration/connecting-to-data-stores/jaeger"},{"type":"link","label":"OpenSearch","href":"/configuration/connecting-to-data-stores/opensearch","docId":"configuration/connecting-to-data-stores/opensearch"},{"type":"link","label":"Elastic APM","href":"/configuration/connecting-to-data-stores/elasticapm","docId":"configuration/connecting-to-data-stores/elasticapm"},{"type":"link","label":"SignalFX","href":"/configuration/connecting-to-data-stores/signalfx","docId":"configuration/connecting-to-data-stores/signalfx"},{"type":"link","label":"Tempo","href":"/configuration/connecting-to-data-stores/tempo","docId":"configuration/connecting-to-data-stores/tempo"},{"type":"link","label":"Lightstep","href":"/configuration/connecting-to-data-stores/lightstep","docId":"configuration/connecting-to-data-stores/lightstep"},{"type":"link","label":"New Relic","href":"/configuration/connecting-to-data-stores/new-relic","docId":"configuration/connecting-to-data-stores/new-relic"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Deployment","items":[{"type":"link","label":"Deployment Overview","href":"/deployment/overview","docId":"deployment/overview"},{"type":"link","label":"Docker","href":"/deployment/docker","docId":"deployment/docker"},{"type":"link","label":"Kubernetes","href":"/deployment/kubernetes","docId":"deployment/kubernetes"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Concepts","items":[{"type":"link","label":"What is trace-based testing","href":"/concepts/what-is-trace-based-testing","docId":"concepts/what-is-trace-based-testing"},{"type":"link","label":"Architecture","href":"/concepts/architecture","docId":"concepts/architecture"},{"type":"link","label":"Assertions","href":"/concepts/assertions","docId":"concepts/assertions"},{"type":"link","label":"Environments","href":"/concepts/environments","docId":"concepts/environments"},{"type":"link","label":"Selectors","href":"/concepts/selectors","docId":"concepts/selectors"},{"type":"link","label":"Expressions","href":"/concepts/expressions","docId":"concepts/expressions"},{"type":"link","label":"Transactions","href":"/concepts/transactions","docId":"concepts/transactions"},{"type":"link","label":"Versioning","href":"/concepts/versioning","docId":"concepts/versioning"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Web UI","items":[{"type":"link","label":"Creating Tests","href":"/web-ui/creating-tests","docId":"web-ui/creating-tests"},{"type":"link","label":"Creating Test Specifications","href":"/web-ui/creating-test-specifications","docId":"web-ui/creating-test-specifications"},{"type":"link","label":"Creating Test Outputs","href":"/web-ui/creating-test-outputs","docId":"web-ui/creating-test-outputs"},{"type":"link","label":"Test Results","href":"/web-ui/test-results","docId":"web-ui/test-results"},{"type":"link","label":"Exporting Tests","href":"/web-ui/exporting-tests","docId":"web-ui/exporting-tests"},{"type":"link","label":"Using Undefined Variables","href":"/web-ui/undefined-variables","docId":"web-ui/undefined-variables"}],"collapsed":true,"collapsible":true},{"type":"category","label":"CLI","items":[{"type":"link","label":"Configuring your CLI","href":"/cli/configuring-your-cli","docId":"cli/configuring-your-cli"},{"type":"link","label":"Creating Data Stores","href":"/cli/creating-data-stores","docId":"cli/creating-data-stores"},{"type":"link","label":"Creating Tests","href":"/cli/creating-tests","docId":"cli/creating-tests"}],"collapsed":true,"collapsible":true},{"type":"category","label":"CI/CD automation","items":[{"type":"link","label":"GitHub actions pipeline","href":"/ci-cd-automation/github-actions-pipeline","docId":"ci-cd-automation/github-actions-pipeline"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tools & Integrations","items":[{"type":"link","label":"Overview","href":"/tools-and-integrations/overview","docId":"tools-and-integrations/overview"},{"type":"category","label":"Integrations","items":[{"type":"link","label":"Keptn","href":"/tools-and-integrations/integrations/keptn","docId":"tools-and-integrations/integrations/keptn"},{"type":"link","label":"K6","href":"/tools-and-integrations/integrations/k6","docId":"tools-and-integrations/integrations/k6"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Examples & Tutorials","items":[{"type":"link","label":"Overview","href":"/examples-tutorials/overview","docId":"examples-tutorials/overview"},{"type":"category","label":"Recipes","items":[{"type":"link","label":"Overview","href":"/examples-tutorials/recipes","docId":"examples-tutorials/recipes"},{"type":"link","label":"Running Tracetest Without a Trace Data Store","href":"/examples-tutorials/recipes/running-tracetest-without-a-trace-data-store","docId":"examples-tutorials/recipes/running-tracetest-without-a-trace-data-store"},{"type":"link","label":"Running Tracetest With Jaeger","href":"/examples-tutorials/recipes/running-tracetest-with-jaeger","docId":"examples-tutorials/recipes/running-tracetest-with-jaeger"},{"type":"link","label":"Running Tracetest With OpenSearch","href":"/examples-tutorials/recipes/running-tracetest-with-opensearch","docId":"examples-tutorials/recipes/running-tracetest-with-opensearch"},{"type":"link","label":"Running Tracetest With Tempo","href":"/examples-tutorials/recipes/running-tracetest-with-tempo","docId":"examples-tutorials/recipes/running-tracetest-with-tempo"},{"type":"link","label":"Running Tracetest With Lightstep","href":"/examples-tutorials/recipes/running-tracetest-with-lightstep","docId":"examples-tutorials/recipes/running-tracetest-with-lightstep"},{"type":"link","label":"Running Tracetest With New Relic","href":"/examples-tutorials/recipes/running-tracetest-with-new-relic","docId":"examples-tutorials/recipes/running-tracetest-with-new-relic"},{"type":"link","label":"Running Tracetest With Elastic APM","href":"/examples-tutorials/recipes/running-tracetest-with-elasticapm","docId":"examples-tutorials/recipes/running-tracetest-with-elasticapm"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Live examples","items":[{"type":"category","label":"Pokemon API Demo","items":[{"type":"link","label":"Overview","href":"/live-examples/pokeshop/overview","docId":"live-examples/pokeshop/overview"},{"type":"category","label":"Use Cases","items":[{"type":"link","label":"Add Pokemon","href":"/live-examples/pokeshop/use-cases/add-pokemon","docId":"live-examples/pokeshop/use-cases/add-pokemon"},{"type":"link","label":"List Pokemon","href":"/live-examples/pokeshop/use-cases/list-pokemon","docId":"live-examples/pokeshop/use-cases/list-pokemon"},{"type":"link","label":"Get Pokemon by ID","href":"/live-examples/pokeshop/use-cases/get-pokemon-by-id","docId":"live-examples/pokeshop/use-cases/get-pokemon-by-id"},{"type":"link","label":"Import Pokemon","href":"/live-examples/pokeshop/use-cases/import-pokemon","docId":"live-examples/pokeshop/use-cases/import-pokemon"}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"link","label":"Tracetest Open API definition","href":"/openapi"}]},"docs":{"ci-cd-automation/github-actions-pipeline":{"id":"ci-cd-automation/github-actions-pipeline","title":"GitHub Actions Pipeline","description":"Read our blog post:","sidebar":"tutorialSidebar"},"cli/configuring-your-cli":{"id":"cli/configuring-your-cli","title":"Configuring your CLI","description":"Our web interface makes it easier to visualize your traces and add assertions, but sometimes a CLI is needed for automation. The CLI was developed for users creating tests and executing them each time a change is made in the system, so Tracetest can detect regressions and check service SLOs.","sidebar":"tutorialSidebar"},"cli/creating-data-stores":{"id":"cli/creating-data-stores","title":"Defining Data Stores as Text Files","description":"You might have multiple Tracetest instances that need to be connected to the same data stores. An easy way of sharing the configuration is by using a configuration file that can be applied to your Tracetest instance.","sidebar":"tutorialSidebar"},"cli/creating-environments":{"id":"cli/creating-environments","title":"Creating Environments","description":"Just like Data Stores, you can also manage your environments using the CLI and definition files."},"cli/creating-tests":{"id":"cli/creating-tests","title":"Defining Tests as Text Files","description":"One important aspect of testing your code is the ability to quickly implement changes while not breaking your application. If you change your application, it is important that you are able to update your tests and run them against your new implementation as soon as possible for a timely development feedback loop.","sidebar":"tutorialSidebar"},"cli/creating-transactions":{"id":"cli/creating-transactions","title":"creating-transactions","description":""},"cli/exporting-tests":{"id":"cli/exporting-tests","title":"exporting-tests","description":""},"concepts/architecture":{"id":"concepts/architecture","title":"Architecture","description":"The diagram below shows the underlying Tracetest architecture.","sidebar":"tutorialSidebar"},"concepts/assertions":{"id":"concepts/assertions","title":"Assertions","description":"Test Specifications may be added to a trace to set a value for a step in the trace to determine success or failure. If test specs have already been added to a test, they will be on the Test screen:","sidebar":"tutorialSidebar"},"concepts/data-stores":{"id":"concepts/data-stores","title":"data-stores","description":""},"concepts/environments":{"id":"concepts/environments","title":"Environments","description":"A common use case for tests is to assert the same behavior across multiple environments (dev, staging, and production, for example). To make sure all environments will have the same behavior, it is important that the tests executed against those environments test the same aspects. To reduce the risks of diverging tests, Tracetest allows you to organize different environments configurations using global objects called Environments.","sidebar":"tutorialSidebar"},"concepts/expressions":{"id":"concepts/expressions","title":"Expressions","description":"Tracetest allows you to add expressions when writing your tests. They are a nice and clean way of adding values that are only known during execution time. For example, when referencing a variable, a span attribute or even arithmetic operations.","sidebar":"tutorialSidebar"},"concepts/selectors":{"id":"concepts/selectors","title":"Selectors","description":"If you find yourself in a position where you cannot select complex spans, you can use our advanced selectors to help with that task. Advanced selectors enable selecting spans that are impossible to select using just basic selectors.","sidebar":"tutorialSidebar"},"concepts/tests":{"id":"concepts/tests","title":"tests","description":""},"concepts/transactions":{"id":"concepts/transactions","title":"Transactions","description":"Most End-to-End tests are not simple to run. They require some setup before the actual test is run. Actions like creating a new user, removing all items from a cart, etc. So, it\'s important that you can execute multiple steps as part of your test suite. Tracetest introduces the concept of Transactions to achieve this goal.","sidebar":"tutorialSidebar"},"concepts/versioning":{"id":"concepts/versioning","title":"Versioning","description":"As your system evolves, your tests tend to do the same. However, that might be confusing if you don\'t have a versioning mechanism in place. Imagine that you wrote a new test for the version v0.5.0 of your application. After some months, your application is in version v0.13.7. Most likely, your tests changed as you moved your application forward. But without versioning, if you revisit that first test you created, it will look like exactly the one you use today instead of the test you originally wrote. That happens because while you have multiple versions of your application, you only keep track of one version of your tests: the current version. So there is no way of going back in time and seeing what a test looked like in the past.","sidebar":"tutorialSidebar"},"concepts/what-is-trace-based-testing":{"id":"concepts/what-is-trace-based-testing","title":"What is Trace-Based Testing","description":"Trace-Based Testing is a means of conducting deep integration or system tests by utilizing the rich data contained in a distributed system trace.","sidebar":"tutorialSidebar"},"concepts/what-is-tracing":{"id":"concepts/what-is-tracing","title":"what-is-tracing","description":""},"configuration/config-file-reference":{"id":"configuration/config-file-reference","title":"config-file-reference","description":""},"configuration/connecting-to-data-stores/elasticapm":{"id":"configuration/connecting-to-data-stores/elasticapm","title":"Elastic APM","description":"If you want to use Elastic APM as the trace data store, you can configure Tracetest to fetch trace data from Elasticsearch.","sidebar":"tutorialSidebar"},"configuration/connecting-to-data-stores/jaeger":{"id":"configuration/connecting-to-data-stores/jaeger","title":"Jaeger","description":"If you want to use Jaeger as the trace data store, you can configure Tracetest to fetch trace data from Jaeger.","sidebar":"tutorialSidebar"},"configuration/connecting-to-data-stores/lightstep":{"id":"configuration/connecting-to-data-stores/lightstep","title":"Lightstep","description":"If you want to use Lightstep as the trace data store, you\'ll configure the OpenTelemetry Collector to receive traces from your system and then send them to both Tracetest and Lightstep. And, you don\'t have to change your existing pipelines to do so.","sidebar":"tutorialSidebar"},"configuration/connecting-to-data-stores/new-relic":{"id":"configuration/connecting-to-data-stores/new-relic","title":"New Relic","description":"If you want to use New Relic as the trace data store, you\'ll configure the OpenTelemetry Collector to receive traces from your system and then send them to both Tracetest and New Relic. And, you don\'t have to change your existing pipelines to do so.","sidebar":"tutorialSidebar"},"configuration/connecting-to-data-stores/opensearch":{"id":"configuration/connecting-to-data-stores/opensearch","title":"OpenSearch","description":"If you want to use OpenSearch as the trace data store, you can configure Tracetest to fetch trace data from OpenSearch.","sidebar":"tutorialSidebar"},"configuration/connecting-to-data-stores/opentelemetry-collector":{"id":"configuration/connecting-to-data-stores/opentelemetry-collector","title":"OpenTelemetry Collector","description":"If you don\'t want to use a trace data store, you can send all traces directly to Tracetest using your OpenTelemetry Collector. And, you don\'t have to change your existing pipelines to do so.","sidebar":"tutorialSidebar"},"configuration/connecting-to-data-stores/signalfx":{"id":"configuration/connecting-to-data-stores/signalfx","title":"SignalFx","description":"If you want to use SignalFx as the trace data store, you can configure Tracetest to fetch trace data from SignalFx.","sidebar":"tutorialSidebar"},"configuration/connecting-to-data-stores/tempo":{"id":"configuration/connecting-to-data-stores/tempo","title":"Tempo","description":"If you want to use Tempo as the trace data store, you can configure Tracetest to fetch trace data from Tempo.","sidebar":"tutorialSidebar"},"configuration/overview":{"id":"configuration/overview","title":"Configuration Overview","description":"There is one way you can set configuration options in Tracetest. By using a configuration file, commonly known as the tracetest.config.yaml file.","sidebar":"tutorialSidebar"},"deployment/docker":{"id":"deployment/docker","title":"Docker Deployment","description":"This guide walks you through using the Tracetest CLI to deploy Tracetest with Docker.","sidebar":"tutorialSidebar"},"deployment/kubernetes":{"id":"deployment/kubernetes","title":"Kubernetes Deployment","description":"This guide walks you through using the Tracetest CLI to deploy Tracetest with Kubernetes.","sidebar":"tutorialSidebar"},"deployment/overview":{"id":"deployment/overview","title":"Deployment Overview","description":"This section contains a general overview of deploying a Tracetest in production. You can find platform-specific guides for:","sidebar":"tutorialSidebar"},"deployment/production-checklist":{"id":"deployment/production-checklist","title":"production-checklist","description":""},"environment-variables":{"id":"environment-variables","title":"Environment Variables","description":"TODO"},"examples-tutorials/overview":{"id":"examples-tutorials/overview","title":"Overview","description":"Below you can find tutorials to help you get started with Tracetest.","sidebar":"tutorialSidebar"},"examples-tutorials/recipes":{"id":"examples-tutorials/recipes","title":"Recipes","description":"These recipes will show you the best practices of using Tracetest.","sidebar":"tutorialSidebar"},"examples-tutorials/recipes/running-tracetest-with-elasticapm":{"id":"examples-tutorials/recipes/running-tracetest-with-elasticapm","title":"Running Tracetest with Elastic APM","description":"Check out the source code on GitHub here.","sidebar":"tutorialSidebar"},"examples-tutorials/recipes/running-tracetest-with-jaeger":{"id":"examples-tutorials/recipes/running-tracetest-with-jaeger","title":"Running Tracetest with Jaeger","description":"Check out the source code on GitHub here.","sidebar":"tutorialSidebar"},"examples-tutorials/recipes/running-tracetest-with-lightstep":{"id":"examples-tutorials/recipes/running-tracetest-with-lightstep","title":"Running Tracetest With Lightstep","description":"Check out the source code on GitHub here.","sidebar":"tutorialSidebar"},"examples-tutorials/recipes/running-tracetest-with-new-relic":{"id":"examples-tutorials/recipes/running-tracetest-with-new-relic","title":"Running Tracetest With New Relic","description":"Check out the source code on GitHub here.","sidebar":"tutorialSidebar"},"examples-tutorials/recipes/running-tracetest-with-opensearch":{"id":"examples-tutorials/recipes/running-tracetest-with-opensearch","title":"Running Tracetest with OpenSearch","description":"Check out the source code on GitHub here.","sidebar":"tutorialSidebar"},"examples-tutorials/recipes/running-tracetest-with-tempo":{"id":"examples-tutorials/recipes/running-tracetest-with-tempo","title":"Running Tracetest with Tempo","description":"Check out the source code on GitHub here.","sidebar":"tutorialSidebar"},"examples-tutorials/recipes/running-tracetest-without-a-trace-data-store":{"id":"examples-tutorials/recipes/running-tracetest-without-a-trace-data-store","title":"Running Tracetest without a Trace Data Store","description":"Check out the source code on GitHub here.","sidebar":"tutorialSidebar"},"getting-started/detailed-installation":{"id":"getting-started/detailed-installation","title":"Detailed Instructions on Installing Tracetest Using the CLI","description":"Tracetest has a command line interface (CLI) which includes an install wizard that helps to install the Tracetest server into Docker or Kubernetes. The CLI can also be used to run tests, download or upload tests, and manage much of the capability of Tracetest.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Quick Start","description":"This page showcases getting started with Tracetest by using the Tracetest CLI, Docker, or Kubernetes.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Tracetest Documentation","description":"\x3c!--","sidebar":"tutorialSidebar"},"kubecon":{"id":"kubecon","title":"OTel-Demo testing game @ KubeconNA 2022","description":"Play our game, learn to run trace-based tests using TraceTest, get familiar with the OpenTelemetry Community Demo, and win a Plushie!"},"live-examples/opentelemetry-store/overview":{"id":"live-examples/opentelemetry-store/overview","title":"overview","description":""},"live-examples/pokeshop/overview":{"id":"live-examples/pokeshop/overview","title":"Pokeshop API","description":"As a testing ground, the team at Tracetest has implemented a sample instrumented API around the PokeAPI.","sidebar":"tutorialSidebar"},"live-examples/pokeshop/use-cases/add-pokemon":{"id":"live-examples/pokeshop/use-cases/add-pokemon","title":"Pokeshop API - Add Pokemon","description":"This use case showcases a simple example of an API call where call data is validated and persisted into a database.","sidebar":"tutorialSidebar"},"live-examples/pokeshop/use-cases/get-pokemon-by-id":{"id":"live-examples/pokeshop/use-cases/get-pokemon-by-id","title":"Pokeshop API - Get Pokemon by ID","description":"This use case retrieves a specific Pokemon from the cache if it is cached, or from the database (Postgres) also populating the cache. The idea of this query is to showcase a straightforward scenario, where the API layer receives a request from the outside and needs to evaluate a different behavior depending of its dependencies.","sidebar":"tutorialSidebar"},"live-examples/pokeshop/use-cases/import-pokemon":{"id":"live-examples/pokeshop/use-cases/import-pokemon","title":"Pokeshop API - Import Pokemon","description":"This use case showcases a more complex scenario involving an async process. Usually, when working with microservices, there are use cases where some of the processing needs to happen asynchronously, for example, when triggering a user notification, generating reports, or processing a payment order. With this endpoint, we provide an example of how users can implement trace-based testing for such scenarios.","sidebar":"tutorialSidebar"},"live-examples/pokeshop/use-cases/list-pokemon":{"id":"live-examples/pokeshop/use-cases/list-pokemon","title":"Pokeshop API - List Pokemon","description":"This use case retrieves the list of Pokemon directly from the database (Postgres) based on the provided query through the API. The purpose of this query is to showcase a straightforward scenario, where the API layer receives a request from the outside and needs to trigger a database query to get some data and return it to the client.","sidebar":"tutorialSidebar"},"openapi":{"id":"openapi","title":"openapi","description":"!!swagger-http https://raw.githubusercontent.com/kubeshop/tracetest/main/api/openapi.yaml!!"},"quick-start":{"id":"quick-start","title":"Quick Start","description":"In this section, you will:"},"run-affected-spans":{"id":"run-affected-spans","title":"Affected Spans","description":"As you might know, Tracetest assertions are composed of two main parts:"},"run-exports":{"id":"run-exports","title":"Edit a Test","description":"Tracetest allows you to export the different set of information displayed for assertions and checks in a way you can use it as input for other tools, create text based tests to use on your CI/CD pipelines using the CLI and more options."},"run-locally":{"id":"run-locally","title":"Run Tracetest Locally","description":"Tracetest depends on a postgres database and a trace store backend (Jaeger or Tempo). The frontend requires node and npm and the backend requires the go tooling."},"run-text-search":{"id":"run-text-search","title":"Text Search","description":"Tracetest enables you to find the information you need more easily by using the text search input at the top of the Diagram view."},"server-configuration":{"id":"server-configuration","title":"Server configuration","description":"Tracetest can be configured using a config.yaml file placed on the same directory as its executable. It is useful to configure some aspects of how tracetest should behave. This section is dedicated to explain the options we currently have available."},"tools-and-integrations/integrations/k6":{"id":"tools-and-integrations/integrations/k6","title":"Running Tracetest with K6","description":"Tracetest is a testing tool based on OpenTelemetry that allows you to test your distributed application. It allows you to use your telemetry data generated by the OpenTelemetry tools to check and assert if your application has the desired behavior defined by your test definitions.","sidebar":"tutorialSidebar"},"tools-and-integrations/integrations/keptn":{"id":"tools-and-integrations/integrations/keptn","title":"Running Tracetest with Keptn","description":"Tracetest is a testing tool based on OpenTelemetry that permits you to test your distributed application. It allows you to use your trace data generated on your OpenTelemetry tools to check and assert if your application has the desired behavior defined by your test definitions.","sidebar":"tutorialSidebar"},"tools-and-integrations/overview":{"id":"tools-and-integrations/overview","title":"Overview","description":"Tracetest can be integrated and used with another tools. See below which integrations we are working on:","sidebar":"tutorialSidebar"},"web-ui/creating-environments":{"id":"web-ui/creating-environments","title":"creating-environments","description":""},"web-ui/creating-test-outputs":{"id":"web-ui/creating-test-outputs","title":"Creating Test Outputs","description":"A Test Output allows you to define a variable based on the information contained in a particular span\'s attributes. This variable can be referenced in the same test or in later tests in a transaction. If test outputs have already been added to a test, they will be on the Test screen under the Test Outputs tab:","sidebar":"tutorialSidebar"},"web-ui/creating-test-specifications":{"id":"web-ui/creating-test-specifications","title":"Creating Test Specifications","description":"Test Specifications may be added to a trace to set a value for a step in the trace to determine success or failure. If test specs have already been added to a test, they will be on the Test screen:","sidebar":"tutorialSidebar"},"web-ui/creating-tests":{"id":"web-ui/creating-tests","title":"Creating Tests","description":"Main Screen","sidebar":"tutorialSidebar"},"web-ui/creating-transactions":{"id":"web-ui/creating-transactions","title":"creating-transactions","description":""},"web-ui/editing-tests":{"id":"web-ui/editing-tests","title":"Editing Tests","description":"Tracetest enables the update of test details at anytime, if you have to update any of the details regarding the triggering method or the basic details such as name and/or description."},"web-ui/exporting-tests":{"id":"web-ui/exporting-tests","title":"Exporting Tests","description":"Tracetest allows you to export the different set of information displayed for assertions and checks for a way you can use it as input for other tools and create text based tests to use on your CI/CD pipelines using the CLI and more options.","sidebar":"tutorialSidebar"},"web-ui/test-results":{"id":"web-ui/test-results","title":"Test Results","description":"From the All Tests screen, you can access all your existing tests, create new tests and see the results of any test that has been run.","sidebar":"tutorialSidebar"},"web-ui/undefined-variables":{"id":"web-ui/undefined-variables","title":"Undefined Variables","description":"When a user runs a test or a transaction, any variables that will be needed but are not defined will be prompted for:","sidebar":"tutorialSidebar"},"websocket":{"id":"websocket","title":"Websocket endpoint","description":"Tracetest allow you to subscribe to updates of resources using websockets. There are two endpoints that you can use to manage subscriptions:"},"working-with-traces":{"id":"working-with-traces","title":"Working with Traces","description":"All tests will be listed in the dashboard:"}}}')}}]);