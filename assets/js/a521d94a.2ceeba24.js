"use strict";(self.webpackChunktracetest_docs=self.webpackChunktracetest_docs||[]).push([[4677],{1837:e=>{e.exports=JSON.parse('{"url":"https://raw.githubusercontent.com/kubeshop/tracetest/main/api/openapi.yaml","themeId":"theme-redoc","isSpecFile":false,"spec":{"openapi":"3.0.0","info":{"version":"0.2.1","title":"TraceTest","description":"OpenAPI definition for TraceTest endpoint and resources"},"servers":[{"url":"/api"}],"paths":{"/definition.yaml":{"post":{"tags":["api"],"summary":"Execute a definition","description":"Execute a definition","operationId":"executeDefinition","requestBody":{"content":{"text/json":{"schema":{"$ref":"#/components/schemas/TextDefinition"}}}},"responses":{"200":{"description":"Definition updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExecuteDefinitionResponse"}}}},"201":{"description":"Definition created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExecuteDefinitionResponse"}}}}}},"put":{"tags":["api"],"summary":"Upsert a definition","description":"Upsert a definition","operationId":"upsertDefinition","requestBody":{"content":{"text/json":{"schema":{"$ref":"#/components/schemas/TextDefinition"}}}},"responses":{"200":{"description":"Definition updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertDefinitionResponse"}}}},"201":{"description":"Definition created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertDefinitionResponse"}}}}}}},"/transactions":{"get":{"tags":["api"],"summary":"Get transactions","description":"get transactions","operationId":"getTransactions","parameters":[{"in":"query","name":"take","description":"indicates how many transactions can be returned by each page","schema":{"type":"integer","default":20}},{"in":"query","name":"skip","description":"indicates how many transactions will be skipped when paginating","schema":{"type":"integer","default":0}},{"in":"query","name":"query","description":"query to search transactions, based on transaction name and description","schema":{"type":"string"}},{"in":"query","name":"sortBy","description":"indicates the sort field for the transactions","schema":{"type":"string","enum":["created","name","last_run"]}},{"in":"query","name":"sortDirection","description":"indicates the sort direction for the transactions","schema":{"type":"string","enum":["asc","desc"]}}],"responses":{"200":{"description":"successful operation","headers":{"X-Total-Count":{"schema":{"type":"integer"},"description":"Total records count"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Transaction"}}}}},"500":{"description":"problem with getting transactions"}}},"post":{"tags":["api"],"summary":"Create new transaction","description":"Create new transaction","operationId":"createTransaction","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Transaction"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Transaction"}}}},"400":{"description":"trying to create a transaction with an already existing ID"}}}},"/transactions/{transactionId}":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"transactionId","schema":{"type":"string"},"required":true}],"summary":"get transaction","description":"get transaction","operationId":"getTransaction","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Transaction"}}}},"500":{"description":"problem with getting a transaction"}}},"put":{"tags":["api"],"parameters":[{"in":"path","name":"transactionId","schema":{"type":"string"},"required":true}],"summary":"update transaction","description":"update transaction action","operationId":"updateTransaction","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Transaction"}}}},"responses":{"204":{"description":"successful operation"},"500":{"description":"problem with updating transaction"}}},"delete":{"tags":["api"],"parameters":[{"in":"path","name":"transactionId","schema":{"type":"string"},"required":true}],"summary":"delete a transaction","description":"delete a transaction","operationId":"deleteTransaction","responses":{"204":{"description":"OK"}}}},"/transactions/{transactionId}/version/{version}":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"transactionId","schema":{"type":"string"},"required":true},{"in":"path","name":"version","schema":{"type":"integer"},"required":true}],"summary":"get a transaction specific version","description":"get a transaction specific version","operationId":"getTransactionVersion","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Transaction"}}}},"500":{"description":"problem with getting a test"}}}},"/transactions/{transactionId}/version/{version}/definition.yaml":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"transactionId","schema":{"type":"string"},"required":true},{"in":"path","name":"version","schema":{"type":"integer"},"required":true}],"summary":"Get the transaction definition as an YAML file","description":"Get the transaction as an YAML file","operationId":"getTransactionVersionDefinitionFile","responses":{"200":{"description":"OK","content":{"application/yaml":{"schema":{"type":"string"}}}}}}},"/transactions/{transactionId}/run":{"post":{"tags":["api"],"parameters":[{"in":"path","name":"transactionId","schema":{"type":"string"},"required":true}],"summary":"run transaction","description":"run a particular transaction","operationId":"runTransaction","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RunInformation"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionRun"}}}}}},"get":{"tags":["api"],"parameters":[{"in":"path","name":"transactionId","schema":{"type":"string"},"required":true},{"in":"query","name":"take","description":"indicates how many results can be returned by each page","schema":{"type":"integer","default":20}},{"in":"query","name":"skip","description":"indicates how many results will be skipped when paginating","schema":{"type":"integer","default":0}}],"summary":"Get all runs from a particular transaction","description":"Get all runs from a particular transaction","operationId":"getTransactionRuns","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TransactionRun"}}}}}}}},"/transactions/{transactionId}/run/{runId}":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"transactionId","schema":{"type":"string"},"required":true},{"in":"path","name":"runId","schema":{"type":"integer"},"required":true}],"summary":"Get a specific run from a particular transaction","description":"Get a specific run from a particular transaction","operationId":"getTransactionRun","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TransactionRun"}}}},"404":{"description":"transaction run not found"}}},"delete":{"tags":["api"],"parameters":[{"in":"path","name":"transactionId","schema":{"type":"string"},"required":true},{"in":"path","name":"runId","schema":{"type":"integer"},"required":true}],"summary":"Delete a specific run from a particular transaction","description":"Delete a specific run from a particular transaction","operationId":"deleteTransactionRun","responses":{"204":{"description":"OK"},"404":{"description":"transaction run not found"}}}},"/tests":{"get":{"tags":["api"],"summary":"Get tests","description":"get tests","operationId":"getTests","parameters":[{"in":"query","name":"take","description":"indicates how many tests can be returned by each page","schema":{"type":"integer","default":20}},{"in":"query","name":"skip","description":"indicates how many tests will be skipped when paginating","schema":{"type":"integer","default":0}},{"in":"query","name":"query","description":"query to search tests, based on test name and description","schema":{"type":"string"}},{"in":"query","name":"sortBy","description":"indicates the sort field for the tests","schema":{"type":"string","enum":["created","name","last_run"]}},{"in":"query","name":"sortDirection","description":"indicates the sort direction for the tests","schema":{"type":"string","enum":["asc","desc"]}}],"responses":{"200":{"description":"successful operation","headers":{"X-Total-Count":{"schema":{"type":"integer"},"description":"Total records count"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Test"}}}}},"500":{"description":"problem with getting tests"}}},"post":{"tags":["api"],"summary":"Create new test","description":"Create new test action","operationId":"createTest","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Test"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Test"}}}},"400":{"description":"trying to create a test with an already existing ID"}}}},"/tests/{testId}":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true}],"summary":"get test","description":"get test","operationId":"getTest","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Test"}}}},"500":{"description":"problem with getting a test"}}},"put":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true}],"summary":"update test","description":"update test action","operationId":"updateTest","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Test"}}}},"responses":{"204":{"description":"successful operation"},"500":{"description":"problem with updating test"}}},"delete":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true}],"summary":"delete a test","description":"delete a test","operationId":"deleteTest","responses":{"204":{"description":"OK"}}}},"/tests/{testId}/run":{"post":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true}],"summary":"run test","description":"run a particular test","operationId":"runTest","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RunInformation"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestRun"}}}},"422":{"description":"some variables are missing","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MissingVariablesError"}}}}}},"get":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true},{"in":"query","name":"take","description":"indicates how many results can be returned by each page","schema":{"type":"integer","default":20}},{"in":"query","name":"skip","description":"indicates how many results will be skipped when paginating","schema":{"type":"integer","default":0}}],"summary":"get the runs for a test","description":"get the runs from a particular test","operationId":"getTestRuns","responses":{"200":{"description":"successful operation","headers":{"X-Total-Count":{"schema":{"type":"integer"},"description":"Total records count"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TestRun"}}}}}}}},"/tests/{testId}/run/{runId}/select":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true},{"in":"path","name":"runId","schema":{"type":"string"},"required":true},{"in":"query","name":"query","schema":{"type":"string"}}],"summary":"retrieve spans that will be selected by selector","description":"get the spans ids that would be selected by a specific selector query","operationId":"getTestResultSelectedSpans","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SelectedSpansResult"}}}}}}},"/tests/{testId}/run/{runId}/dry-run":{"put":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true},{"in":"path","name":"runId","schema":{"type":"string"},"required":true}],"summary":"run given assertions against the traces from the given run without persisting anything","description":"use this method to test a definition against an actual trace without creating a new version or persisting anything","operationId":"dryRunAssertion","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestSpecs"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AssertionResults"}}}}}}},"/tests/{testId}/run/{runId}/rerun":{"post":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true},{"in":"path","name":"runId","schema":{"type":"string"},"required":true}],"summary":"rerun a test run","description":"rerun a test run","operationId":"rerunTestRun","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestRun"}}}}}}},"/tests/{testId}/run/{runId}/junit.xml":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true},{"in":"path","name":"runId","schema":{"type":"string"},"required":true}],"summary":"get test run results in JUnit xml format","description":"get test run results in JUnit xml format","operationId":"getRunResultJUnit","responses":{"200":{"description":"JUnit formatted file","content":{"application/xml":{"schema":{"type":"string"}}}}}}},"/tests/{testId}/run/{runId}/export":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true},{"in":"path","name":"runId","schema":{"type":"string"},"required":true}],"summary":"export test and test run information","description":"export test and test run information for debugging","operationId":"exportTestRun","responses":{"200":{"description":"successfuly exported test and test run information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExportedTestInformation"}}}}}}},"/tests/import":{"post":{"tags":["api"],"summary":"import test and test run information","description":"import test and test run information for debugging","operationId":"importTestRun","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExportedTestInformation"}}}},"responses":{"200":{"description":"successfuly imported test and test run information","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ExportedTestInformation"}}}}}}},"/tests/{testId}/run/{runId}":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true},{"in":"path","name":"runId","schema":{"type":"string"},"required":true}],"summary":"get test Run","description":"get a particular test Run","operationId":"getTestRun","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestRun"}}}}}},"delete":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true},{"in":"path","name":"runId","schema":{"type":"string"},"required":true}],"summary":"delete a test run","description":"delete a test run","operationId":"deleteTestRun","responses":{"204":{"description":"OK"}}}},"/tests/{testId}/definition":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true}],"operationId":"getTestSpecs","summary":"Get definition for a test","description":"Gets definition for a test","responses":{"201":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/TestSpecs"}}}}}}}},"/tests/{testId}/version/{version}":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true},{"in":"path","name":"version","schema":{"type":"integer"},"required":true}],"summary":"get a test specific version","description":"get a test specific version","operationId":"getTestVersion","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Test"}}}},"500":{"description":"problem with getting a test"}}}},"/tests/{testId}/version/{version}/definition.yaml":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"testId","schema":{"type":"string"},"required":true},{"in":"path","name":"version","schema":{"type":"integer"},"required":true}],"summary":"Get the test definition as an YAML file","description":"Get the test definition as an YAML file","operationId":"getTestVersionDefinitionFile","responses":{"200":{"description":"OK","content":{"application/yaml":{"schema":{"type":"string"}}}}}}},"/environments":{"get":{"tags":["api"],"summary":"Get Environments","description":"Get Environments","operationId":"getEnvironments","parameters":[{"in":"query","name":"take","description":"indicates how many environments can be returned by each page","schema":{"type":"integer","default":20}},{"in":"query","name":"skip","description":"indicates how many environments will be skipped when paginating","schema":{"type":"integer","default":0}},{"in":"query","name":"query","description":"query to search environments, based on environments name and description","schema":{"type":"string"}},{"in":"query","name":"sortBy","description":"indicates the sort field for the environments","schema":{"type":"string","enum":["created","name"]}},{"in":"query","name":"sortDirection","description":"indicates the sort direction for the environments","schema":{"type":"string","enum":["asc","desc"]}}],"responses":{"200":{"description":"successful operation","headers":{"X-Total-Count":{"schema":{"type":"integer"},"description":"Total records count"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Environment"}}}}},"500":{"description":"problem with getting environments"}}},"post":{"tags":["api"],"summary":"Create new environment","description":"Create new environment action","operationId":"createEnvironment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Environment"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Environment"}}}},"400":{"description":"trying to create a environment with an already existing ID"}}}},"/environments/{environmentId}":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"environmentId","schema":{"type":"string"},"required":true}],"summary":"get environment","description":"get environment","operationId":"getEnvironment","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Environment"}}}},"500":{"description":"problem with getting a environment"}}},"put":{"tags":["api"],"parameters":[{"in":"path","name":"environmentId","schema":{"type":"string"},"required":true}],"summary":"update environment","description":"update environment action","operationId":"updateEnvironment","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Environment"}}}},"responses":{"204":{"description":"successful operation"},"500":{"description":"problem with updating environment"}}},"delete":{"tags":["api"],"parameters":[{"in":"path","name":"environmentId","schema":{"type":"string"},"required":true}],"summary":"delete a environment","description":"delete a environment","operationId":"deleteEnvironment","responses":{"204":{"description":"OK"}}}},"/environments/{environmentId}/definition.yaml":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"environmentId","schema":{"type":"string"},"required":true}],"summary":"Get the environment definition as an YAML file","description":"Get the environment as an YAML file","operationId":"getEnvironmentDefinitionFile","responses":{"200":{"description":"OK","content":{"application/yaml":{"schema":{"type":"string"}}}}}}},"/expressions/resolve":{"post":{"tags":["api"],"summary":"resolves an expression and returns the result string","description":"resolves an expression and returns the result string","operationId":"ExpressionResolve","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResolveRequestInfo"}}}},"responses":{"200":{"description":"successfully resolved the expression","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResolveResponseInfo"}}}}}}},"/resources":{"get":{"tags":["api"],"summary":"Get resources","description":"get resources","operationId":"getResources","parameters":[{"in":"query","name":"take","description":"indicates how many transactions can be returned by each page","schema":{"type":"integer","default":20}},{"in":"query","name":"skip","description":"indicates how many transactions will be skipped when paginating","schema":{"type":"integer","default":0}},{"in":"query","name":"query","description":"query to search transactions, based on transaction name and description","schema":{"type":"string"}},{"in":"query","name":"sortBy","description":"indicates the sort field for the transactions","schema":{"type":"string","enum":["created","name","last_run"]}},{"in":"query","name":"sortDirection","description":"indicates the sort direction for the transactions","schema":{"type":"string","enum":["asc","desc"]}}],"responses":{"200":{"description":"successful operation","headers":{"X-Total-Count":{"schema":{"type":"integer"},"description":"Total records count"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Resource"}}}}}}}},"/config/connection":{"post":{"tags":["api"],"summary":"Tests the config data store/exporter connection","description":"Tests the config data store/exporter connection","operationId":"testConnection","requestBody":{"content":{"text/json":{"schema":{"$ref":"#/components/schemas/DataStore"}}}},"responses":{"201":{"description":"Test connection Result","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TestConnectionResponse"}}}}}}},"/datastores":{"get":{"tags":["api"],"summary":"Get all Data Stores","description":"Get all Data Stores","operationId":"getDataStores","parameters":[{"in":"query","name":"take","description":"indicates how many data stores can be returned by each page","schema":{"type":"integer","default":20}},{"in":"query","name":"skip","description":"indicates how many data stores will be skipped when paginating","schema":{"type":"integer","default":0}},{"in":"query","name":"query","description":"query to search data stores, based on data store name","schema":{"type":"string"}},{"in":"query","name":"sortBy","description":"indicates the sort field for the data stores","schema":{"type":"string","enum":["created","name"]}},{"in":"query","name":"sortDirection","description":"indicates the sort direction for the data stores","schema":{"type":"string","enum":["asc","desc"]}}],"responses":{"200":{"description":"successful operation","headers":{"X-Total-Count":{"schema":{"type":"integer"},"description":"Total records count"}},"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DataStore"}}}}},"500":{"description":"problem with getting data stores"}}},"post":{"tags":["api"],"summary":"Create a new Data Store","description":"Create a new Data Store","operationId":"createDataStore","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataStore"}}}},"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataStore"}}}},"400":{"description":"trying to create a data store with an already existing ID"}}}},"/datastores/{dataStoreId}":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"dataStoreId","schema":{"type":"string"},"required":true}],"summary":"Get a Data Store","description":"Get a Data Store","operationId":"getDataStore","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataStore"}}}},"500":{"description":"problem with getting a data store"}}},"put":{"tags":["api"],"parameters":[{"in":"path","name":"dataStoreId","schema":{"type":"string"},"required":true}],"summary":"Update a Data Store","description":"Update a Data Store","operationId":"updateDataStore","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DataStore"}}}},"responses":{"204":{"description":"successful operation"},"500":{"description":"problem with updating data store"}}},"delete":{"tags":["api"],"parameters":[{"in":"path","name":"dataStoreId","schema":{"type":"string"},"required":true}],"summary":"Delete a Data Store","description":"Delete a Data Store","operationId":"deleteDataStore","responses":{"204":{"description":"OK"}}}},"/datastores/{dataStoreId}/definition.yaml":{"get":{"tags":["api"],"parameters":[{"in":"path","name":"dataStoreId","schema":{"type":"string"},"required":true}],"summary":"Get the data store definition as an YAML file","description":"Get the data store as an YAML file","operationId":"getDataStoreDefinitionFile","responses":{"200":{"description":"OK","content":{"application/yaml":{"schema":{"type":"string"}}}}}}}},"components":{"schemas":{"EnvironmentValue":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}},"RunInformation":{"type":"object","properties":{"metadata":{"type":"object","nullable":true,"additionalProperties":{"type":"string"}},"environmentId":{"type":"string"},"variables":{"type":"array","items":{"$ref":"#/components/schemas/EnvironmentValue"}}}},"TextDefinition":{"type":"object","properties":{"runInformation":{"$ref":"#/components/schemas/RunInformation"},"content":{"type":"string"}}},"UpsertDefinitionResponse":{"type":"object","properties":{"id":{"type":"string","description":"resource ID"},"type":{"type":"string","description":"resource type"}}},"ExecuteDefinitionResponse":{"type":"object","properties":{"id":{"type":"string","description":"resource ID"},"runId":{"type":"string","description":"run ID"},"type":{"type":"string","description":"resource type"},"url":{"type":"string","description":"resource web UI url"}}},"HTTPHeader":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}},"HTTPAuth":{"type":"object","properties":{"type":{"type":"string","enum":["apiKey","basic","bearer"]},"apiKey":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"},"in":{"type":"string","enum":["query","header"]}}},"basic":{"type":"object","properties":{"username":{"type":"string"},"password":{"type":"string"}}},"bearer":{"type":"object","properties":{"token":{"type":"string"}}}}},"HTTPRequest":{"type":"object","properties":{"url":{"type":"string"},"method":{"type":"string","enum":["GET","PUT","POST","PATCH","DELETE","COPY","HEAD","OPTIONS","LINK","UNLINK","PURGE","LOCK","UNLOCK","PROPFIND","VIEW"]},"headers":{"type":"array","items":{"$ref":"#/components/schemas/HTTPHeader"}},"body":{"type":"string"},"auth":{"$ref":"#/components/schemas/HTTPAuth"}}},"GRPCHeader":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}},"GRPCRequest":{"type":"object","properties":{"protobufFile":{"type":"string"},"address":{"type":"string"},"service":{"type":"string"},"method":{"type":"string"},"metadata":{"type":"array","items":{"$ref":"#/components/schemas/GRPCHeader"}},"auth":{"$ref":"#/components/schemas/HTTPAuth"},"request":{"type":"string"}}},"TRACEIDRequest":{"type":"object","properties":{"id":{"type":"string"}}},"Trigger":{"type":"object","properties":{"triggerType":{"type":"string","enum":["http","grpc","traceid"]},"triggerSettings":{"type":"object","properties":{"http":{"$ref":"#/components/schemas/HTTPRequest"},"grpc":{"$ref":"#/components/schemas/GRPCRequest"},"traceid":{"$ref":"#/components/schemas/TRACEIDRequest"}}}}},"SelectorFilter":{"type":"object","required":["property","operator","value"],"properties":{"property":{"type":"string"},"operator":{"type":"string"},"value":{"type":"string"}}},"SelectorPseudoClass":{"type":"object","nullable":true,"required":["name"],"properties":{"name":{"type":"string"},"argument":{"type":"integer"}}},"SpanSelector":{"type":"object","nullable":true,"required":["filters"],"properties":{"filters":{"type":"array","items":{"$ref":"#/components/schemas/SelectorFilter"}},"pseudoClass":{"$ref":"#/components/schemas/SelectorPseudoClass"},"childSelector":{"$ref":"#/components/schemas/SpanSelector"}}},"Selector":{"type":"object","properties":{"query":{"type":"string"},"structure":{"type":"array","items":{"$ref":"#/components/schemas/SpanSelector"}}}},"TestSpecs":{"type":"object","properties":{"specs":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","nullable":true},"selector":{"$ref":"#/components/schemas/Selector"},"assertions":{"type":"array","items":{"type":"string"}}}}}},"example":{"specs":[{"selector":{"query":"span[tracetest.span.type=\\"http\\"]","structure":[{"filters":[{"property":"tracetest.span.type","operator":"=","value":"http"}]}]},"assertions":[{"attribute":"tracetest.span.duration","comparator":"<","expected":"2000"},{"attribute":"http.status_code","comparator":"=","expected":"200"}]}]}},"TestOutput":{"type":"object","properties":{"name":{"type":"string"},"selector":{"$ref":"#/components/schemas/Selector"},"value":{"type":"string"}}},"TestSummary":{"type":"object","properties":{"runs":{"type":"integer","readOnly":true},"lastRun":{"type":"object","readOnly":true,"properties":{"time":{"type":"string","format":"date-time","nullable":true},"passes":{"type":"integer","readOnly":true},"fails":{"type":"integer","readOnly":true}}}}},"Test":{"type":"object","properties":{"id":{"type":"string","readOnly":true},"name":{"type":"string"},"description":{"type":"string"},"version":{"type":"integer","description":"version number of the test"},"createdAt":{"type":"string","format":"date-time"},"serviceUnderTest":{"$ref":"#/components/schemas/Trigger"},"specs":{"$ref":"#/components/schemas/TestSpecs","description":"specification of assertions that are going to be made"},"outputs":{"description":"define test outputs, in a key/value format. The value is processed as an expression","type":"array","items":{"$ref":"#/components/schemas/TestOutput"},"example":[{"name":"USER_ID","selector":"span[name=\\"user_signup\\" result=\\"success\\"]","value":"attr:myapp.signup.user_id"},{"name":"PROFILE_URL","selector":"span[tracetest.span.type=\\"general\\" name=\\"Tracetest trigger\\"]","value":"${attr:tracetest.response.body | json_path \'.user.profileUrl\' }"}]},"summary":{"$ref":"#/components/schemas/TestSummary","description":"summary of test data","readOnly":true}}},"Transaction":{"type":"object","properties":{"id":{"type":"string","readOnly":true},"name":{"type":"string"},"description":{"type":"string"},"version":{"type":"integer","description":"version number of the test"},"steps":{"type":"array","items":{"$ref":"#/components/schemas/Test"}},"createdAt":{"type":"string","format":"date-time"},"summary":{"$ref":"#/components/schemas/TestSummary","description":"summary of transaction","readOnly":true}}},"Environment":{"type":"object","properties":{"id":{"type":"string","readOnly":true},"name":{"type":"string"},"description":{"type":"string"},"values":{"type":"array","items":{"$ref":"#/components/schemas/EnvironmentValue"}}}},"HTTPResponse":{"type":"object","properties":{"status":{"type":"string"},"statusCode":{"type":"integer"},"headers":{"type":"array","items":{"$ref":"#/components/schemas/HTTPHeader"}},"body":{"type":"string"}}},"GRPCResponse":{"type":"object","properties":{"statusCode":{"type":"integer"},"metadata":{"type":"array","items":{"$ref":"#/components/schemas/GRPCHeader"}},"body":{"type":"string"}}},"TRACEIDResponse":{"type":"object","properties":{"id":{"type":"string"}}},"TriggerResult":{"type":"object","properties":{"triggerType":{"type":"string","enum":["http","grpc","traceid"]},"triggerResult":{"type":"object","properties":{"http":{"$ref":"#/components/schemas/HTTPResponse"},"grpc":{"$ref":"#/components/schemas/GRPCResponse"},"traceid":{"$ref":"#/components/schemas/TRACEIDResponse"}}}}},"Span":{"type":"object","properties":{"id":{"type":"string"},"parentId":{"type":"string"},"name":{"type":"string"},"startTime":{"type":"integer","format":"int64","description":"span start time in unix milli format","example":1656701595277},"endTime":{"type":"integer","format":"int64","description":"span end time in unix milli format","example":1656701595800},"attributes":{"type":"object","description":"Key-Value of span attributes","additionalProperties":{"type":"string","description":"attribute value"},"example":{"span.name":"POST /create","tracetest.span.type":"http","tracetest.span.duration":"2000"}},"children":{"type":"array","items":{"$ref":"#/components/schemas/Span"}}}},"Trace":{"type":"object","properties":{"traceId":{"type":"string"},"tree":{"$ref":"#/components/schemas/Span"},"flat":{"description":"falttened version, mapped as spanId -> span{}","type":"object","additionalProperties":{"$ref":"#/components/schemas/Span"}}}},"AssertionSpanResult":{"type":"object","properties":{"spanId":{"type":"string"},"observedValue":{"type":"string"},"passed":{"type":"boolean"},"error":{"type":"string"}}},"AssertionResult":{"type":"object","properties":{"assertion":{"type":"string"},"allPassed":{"type":"boolean"},"spanResults":{"type":"array","items":{"$ref":"#/components/schemas/AssertionSpanResult"}}}},"AssertionResults":{"type":"object","properties":{"allPassed":{"type":"boolean"},"results":{"type":"array","items":{"type":"object","properties":{"selector":{"$ref":"#/components/schemas/Selector"},"results":{"type":"array","items":{"$ref":"#/components/schemas/AssertionResult"}}}}}},"example":{"allPassed":true,"results":[{"selector":{"query":"span[tracetest.span.type=\\"http\\"]","structure":[{"filters":[{"property":"tracetest.span.type","operator":"=","value":"http"}]}]},"results":[{"assertion":{"attribute":"http.status_code","comparator":"=","expected":"200"},"allPassed":true,"spanResults":[{"spanId":"123","observedValue":"test","passed":true}]},{"assertion":{"attribute":"http.status_code","comparator":"=","expected":"200"},"allPassed":true,"spanResults":[{"spanId":"123","observedValue":"test","passed":true}]}]}]}},"TestRun":{"type":"object","properties":{"id":{"type":"string","readOnly":true},"traceId":{"type":"string","readOnly":true},"spanId":{"type":"string","readOnly":true},"testVersion":{"type":"integer","description":"Test version used when running this test run"},"state":{"type":"string","enum":["CREATED","EXECUTING","AWAITING_TRACE","AWAITING_TEST_RESULTS","FINISHED","FAILED"],"description":"Current execution state"},"lastErrorState":{"type":"string","description":"Details of the cause for the last `FAILED` state"},"executionTime":{"type":"integer","description":"time in seconds it took for the test to complete, either success or fail. If the test is still running, it will show the time up to the time of the request"},"triggerTime":{"type":"integer","description":"time in milliseconds it took for the triggering transaction to complete, either success or fail. If the test is still running, it will show the time up to the time of the request"},"createdAt":{"type":"string","format":"date-time"},"serviceTriggeredAt":{"type":"string","format":"date-time"},"serviceTriggerCompletedAt":{"type":"string","format":"date-time"},"obtainedTraceAt":{"type":"string","format":"date-time"},"completedAt":{"type":"string","format":"date-time"},"environment":{"$ref":"#/components/schemas/Environment"},"triggerResult":{"$ref":"#/components/schemas/TriggerResult"},"trace":{"$ref":"#/components/schemas/Trace"},"result":{"$ref":"#/components/schemas/AssertionResults"},"outputs":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"spanId":{"type":"string"},"value":{"type":"string"}}}},"metadata":{"type":"object","additionalProperties":{"type":"string"}},"transactionId":{"type":"string"},"transactionRunId":{"type":"string"}}},"TransactionRun":{"type":"object","properties":{"id":{"type":"string","readOnly":true},"version":{"type":"integer","readOnly":true},"createdAt":{"type":"string","format":"date-time"},"completedAt":{"type":"string","format":"date-time"},"state":{"type":"string","enum":["CREATED","EXECUTING","FINISHED","FAILED"]},"steps":{"type":"array","items":{"$ref":"#/components/schemas/TestRun"}},"environment":{"$ref":"#/components/schemas/Environment"},"metadata":{"type":"object","additionalProperties":{"type":"string"}},"pass":{"type":"integer"},"fail":{"type":"integer"}}},"Variable":{"type":"object","properties":{"key":{"type":"string"},"defaultValue":{"type":"string"}}},"MissingVariable":{"type":"object","properties":{"testId":{"type":"string"},"variables":{"type":"array","items":{"$ref":"#/components/schemas/Variable"}}}},"MissingVariablesError":{"type":"object","properties":{"missingVariables":{"type":"array","items":{"$ref":"#/components/schemas/MissingVariable"}}}},"SelectedSpansResult":{"type":"object","properties":{"selector":{"$ref":"#/components/schemas/Selector"},"spanIds":{"type":"array","items":{"type":"string"}}}},"ExportedTestInformation":{"type":"object","required":["test","run"],"properties":{"test":{"$ref":"#/components/schemas/Test"},"run":{"$ref":"#/components/schemas/TestRun"}}},"ResolveContext":{"type":"object","properties":{"testId":{"type":"string"},"runId":{"type":"string"},"spanId":{"type":"string"},"selector":{"type":"string"},"environmentId":{"type":"string"}}},"ResolveRequestInfo":{"type":"object","properties":{"expression":{"type":"string"},"context":{"$ref":"#/components/schemas/ResolveContext"}}},"ResolveResponseInfo":{"type":"object","properties":{"resolvedValues":{"type":"array","items":{"type":"string"}}}},"Resource":{"type":"object","required":["type","item"],"nullable":false,"properties":{"type":{"type":"string","readOnly":true},"item":{}}},"SupportedDataStores":{"type":"string","enum":["jaeger","openSearch","tempo","signalFx","otlp","elasticApm","newRelic","lightstep"]},"TLSSetting":{"type":"object","properties":{"cAFile":{"type":"string"},"certFile":{"type":"string"},"keyFile":{"type":"string"},"minVersion":{"type":"string"},"maxVersion":{"type":"string"}}},"TLS":{"type":"object","properties":{"insecure":{"type":"boolean"},"insecureSkipVerify":{"type":"boolean"},"serverName":{"type":"string"},"settings":{"$ref":"#/components/schemas/TLSSetting"}}},"GRPCClientSettings":{"type":"object","properties":{"endpoint":{"type":"string"},"readBufferSize":{"type":"number"},"writeBufferSize":{"type":"number"},"waitForReady":{"type":"boolean"},"headers":{"type":"object","additionalProperties":{"type":"string"}},"balancerName":{"type":"string"},"compression":{"type":"string","enum":["gzip","zlib","deflate","snappy","zstd","none",""]},"tls":{"$ref":"#/components/schemas/TLS"},"auth":{"$ref":"#/components/schemas/HTTPAuth"}}},"ElasticSearch":{"type":"object","properties":{"addresses":{"type":"array","items":{"type":"string"}},"username":{"type":"string"},"password":{"type":"string"},"index":{"type":"string"},"certificate":{"type":"string"},"insecureSkipVerify":{"type":"boolean"}}},"SignalFX":{"type":"object","properties":{"realm":{"type":"string"},"token":{"type":"string"}}},"DataStore":{"type":"object","required":["name","type"],"properties":{"id":{"type":"string","readOnly":true},"name":{"type":"string"},"type":{"$ref":"#/components/schemas/SupportedDataStores"},"isDefault":{"type":"boolean"},"jaeger":{"$ref":"#/components/schemas/GRPCClientSettings"},"tempo":{"$ref":"#/components/schemas/GRPCClientSettings"},"openSearch":{"$ref":"#/components/schemas/ElasticSearch"},"elasticApm":{"$ref":"#/components/schemas/ElasticSearch"},"signalFx":{"$ref":"#/components/schemas/SignalFX"},"createdAt":{"type":"string","format":"date-time"}}},"ConnectionTestStep":{"type":"object","properties":{"passed":{"type":"boolean"},"message":{"type":"string"},"error":{"type":"string"}}},"ConnectionResult":{"type":"object","properties":{"connectivity":{"$ref":"#/components/schemas/ConnectionTestStep"},"authentication":{"$ref":"#/components/schemas/ConnectionTestStep"},"fetchTraces":{"$ref":"#/components/schemas/ConnectionTestStep"}}},"TestConnectionResponse":{"type":"object","properties":{"successful":{"type":"boolean"},"steps":{"type":"array","items":{"$ref":"#/components/schemas/ConnectionResult"}}}}}}}}')}}]);